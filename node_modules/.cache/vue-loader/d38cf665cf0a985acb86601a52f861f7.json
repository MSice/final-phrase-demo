{"remainingRequest":"/Users/suqi04/baidu/baidu/final-phrase-demo/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/suqi04/baidu/baidu/final-phrase-demo/src/views/register/index.vue?vue&type=style&index=0&id=022fc800&lang=less&scoped=true","dependencies":[{"path":"/Users/suqi04/baidu/baidu/final-phrase-demo/src/views/register/index.vue","mtime":1711510961460},{"path":"/Users/suqi04/baidu/baidu/final-phrase-demo/node_modules/css-loader/dist/cjs.js","mtime":1711627299054},{"path":"/Users/suqi04/baidu/baidu/final-phrase-demo/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1711627299426},{"path":"/Users/suqi04/baidu/baidu/final-phrase-demo/node_modules/postcss-loader/src/index.js","mtime":1711627299184},{"path":"/Users/suqi04/baidu/baidu/final-phrase-demo/node_modules/less-loader/dist/cjs.js","mtime":1711627299124},{"path":"/Users/suqi04/baidu/baidu/final-phrase-demo/node_modules/cache-loader/dist/cjs.js","mtime":1711627298830},{"path":"/Users/suqi04/baidu/baidu/final-phrase-demo/node_modules/vue-loader-v16/dist/index.js","mtime":1711627299184}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5yZWdpc3RlciB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgJi1ib3ggewogICAgICAgIGgxIHsKICAgICAgICAgICAgcGFkZGluZzogMjBweCAwOwogICAgICAgIH0KICAgICAgICBwYWRkaW5nOiAyMHB4OwogICAgICAgIHdpZHRoOiA1MDBweDsKICAgICAgICBoZWlnaHQ6IDU1MHB4OwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY4ODsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB9CiAgICAmLWJ0biB7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgbWFyZ2luOiAwOwogICAgfQogICAgJi10ZXh0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgICAgbWFyZ2luLXRvcDogMTBweDsKICAgICAgICBjb2xvcjogcmdiKDExMSwgMTE0LCAxMTQpOwogICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIH0KICAgIC5mb3JtLXRleHQtYnRuIHsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB9Cn0K"},{"version":3,"sources":["/Users/suqi04/baidu/baidu/final-phrase-demo/src/views/register/index.vue"],"names":[],"mappings":";AAsOA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,EAAE;QACF,CAAC,EAAE;YACC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACnB;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB;IACA,CAAC,CAAC,CAAC,CAAC,EAAE;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACb;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB;AACJ","file":"/Users/suqi04/baidu/baidu/final-phrase-demo/src/views/register/index.vue","sourceRoot":"","sourcesContent":["<!--\n * @Author: huangwensong\n * @Date: 2024-03-19 17:12:59\n * @LastEditors: huangwensong\n * @LastEditTime: 2024-03-27 11:37:31\n * @FilePath: /final-phrase-demo/src/views/Register/index.vue\n * @Description: \n-->\n<template>\n    <session class=\"register\">\n        <div class=\"register-box\">\n            <h1>注册</h1>\n            <el-form\n                ref=\"ruleFormRef\"\n                style=\"max-width: 600px\"\n                :model=\"ruleForm\"\n                :rules=\"rules\"\n                label-width=\"auto\"\n                class=\"demo-ruleForm\"\n                :size=\"formSize\"\n                status-icon\n            >\n                <el-form-item label=\"手机号\" prop=\"phone\">\n                    <el-input\n                        v-model=\"ruleForm.phone\"\n                        type=\"phone\"\n                        placeholder=\"手机号\"\n                        autocomplete=\"off\"\n                    />\n                </el-form-item>\n                <el-form-item label=\"验证码\" prop=\"verificationCode\">\n                    <el-input\n                        v-model=\"ruleForm.verificationCode\"\n                        placeholder=\"验证码\"\n                        autocomplete=\"off\"\n                    >\n                        <template #append>\n                            <span\n                                @click=\"getVerificationCode\"\n                                class=\"form-text-btn\"\n                            >\n                                {{\n                                    verificationTime\n                                        ? verificationTime + 's'\n                                        : '获取验证码'\n                                }}\n                            </span>\n                        </template>\n                    </el-input>\n                </el-form-item>\n                <el-form-item label=\"设置密码\" prop=\"password1\">\n                    <el-input\n                        v-model=\"ruleForm.password1\"\n                        type=\"password\"\n                        placeholder=\"8-18位数字、字母组合\"\n                        show-password\n                        autocomplete=\"off\"\n                    />\n                </el-form-item>\n                <el-form-item label=\"确认密码\" prop=\"password2\">\n                    <el-input\n                        v-model=\"ruleForm.password2\"\n                        type=\"password\"\n                        placeholder=\"确认密码\"\n                        show-password\n                        autocomplete=\"off\"\n                    />\n                </el-form-item>\n                <el-form-item label=\"推荐码\" prop=\"invitationCode\">\n                    <el-input\n                        v-model.number=\"ruleForm.invitationCode\"\n                        placeholder=\"非必填\"\n                    />\n                </el-form-item>\n            </el-form>\n            <el-button\n                class=\"register-btn\"\n                type=\"primary\"\n                size=\"large\"\n                @click=\"submitForm(ruleFormRef)\"\n                >注册</el-button\n            >\n\n            <span class=\"register-text\"\n                >为保障您的账号安全和正常使用，请使用实名注册</span\n            >\n\n            <!-- <el-button class=\"register-btn\" @click=\"resetForm(ruleFormRef)\"\n                >Reset</el-button\n            > -->\n        </div>\n    </session>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive, ref } from 'vue';\nimport type { FormInstance, FormRules } from 'element-plus';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport SQLTest from '@/store/SqlTest';\n\nconst router = useRouter();\nconst { userLoginSql } = SQLTest();\n\ninterface RuleForm {\n    phone: string;\n    verificationCode: string;\n    password1: string;\n    password2: string;\n    invitationCode: string;\n}\n\nconst formSize = ref('large');\nconst ruleFormRef = ref<FormInstance>();\nconst ruleForm = reactive<RuleForm>({\n    phone: '',\n    verificationCode: '',\n    password1: '',\n    password2: '',\n    invitationCode: ''\n});\n\nconst validatePass = (rule: any, value: any, callback: any) => {\n    // 8-18位数字、字母组合\n    const reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,18}$/;\n    if (value === '') {\n        callback(new Error('请输入密码！'));\n    } else if (!reg.test(value)) {\n        callback(new Error('密码应为8-18位数字、字母组合！'));\n    } else {\n        if (ruleForm.password2 !== '') {\n            if (!ruleFormRef.value) return;\n            ruleFormRef.value.validateField('password2', () => null);\n        }\n        callback();\n    }\n};\nconst validatePass2 = (rule: any, value: any, callback: any) => {\n    if (value === '') {\n        callback(new Error('请输入确认密码！'));\n    } else if (value !== ruleForm.password1) {\n        callback(new Error('两次输入密码不一致！'));\n    } else {\n        callback();\n    }\n};\n\nconst rules = reactive<FormRules<RuleForm>>({\n    phone: [\n        {\n            validator: (rule: any, value: any, callback: any) => {\n                // 验证手机号\n                if (value === '') {\n                    callback(new Error('请输入手机号！'));\n                } else if (!/^1[3456789]\\d{9}$/.test(value)) {\n                    callback(new Error('请输入正确的手机号！'));\n                } else {\n                    callback();\n                }\n            },\n            trigger: 'blur'\n        }\n    ],\n    verificationCode: [\n        {\n            validator: (rule: any, value: any, callback: any) => {\n                if (value === '') {\n                    callback(new Error('请输入验证码！'));\n                } else {\n                    callback();\n                }\n            },\n            trigger: 'blur'\n        }\n    ],\n    password1: [{ validator: validatePass, trigger: 'blur' }],\n    password2: [{ validator: validatePass2, trigger: 'blur' }]\n});\n\nconst verificationTime = ref(0);\nconst getVerificationCode = () => {\n    if (ruleForm.phone === '') {\n        ElMessage.warning('请输入手机号！');\n        return;\n    }\n    if (verificationTime.value > 0) {\n        return;\n    }\n    verificationTime.value = 60;\n    const timer = setInterval(() => {\n        verificationTime.value--;\n        if (verificationTime.value <= 0) {\n            clearInterval(timer);\n        }\n    }, 1000);\n    ElMessage.success('验证码已发送，请注意查收！');\n};\n\nconst submitForm = (formEl: FormInstance | undefined) => {\n    if (!formEl) return;\n    formEl.validate(valid => {\n        if (valid) {\n            console.log('submit!');\n            console.log(ruleForm);\n            userLoginSql.push({\n                account: ruleForm.phone,\n                password: ruleForm.password1\n            });\n            ElMessage.success('注册成功，即将跳转到登陆页面！');\n            setTimeout(() => {\n                router.push({\n                    path: './home',\n                    query: {\n                        type: 1\n                    }\n                });\n            }, 1000);\n        } else {\n            console.log('error submit!');\n            return false;\n        }\n    });\n};\n\nconst resetForm = (formEl: FormInstance | undefined) => {\n    if (!formEl) return;\n    formEl.resetFields();\n};\n</script>\n<style lang=\"less\" scoped>\n.register {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &-box {\n        h1 {\n            padding: 20px 0;\n        }\n        padding: 20px;\n        width: 500px;\n        height: 550px;\n        background-color: #ffffff88;\n        text-align: center;\n    }\n    &-btn {\n        width: 100%;\n        margin: 0;\n    }\n    &-text {\n        display: inline-block;\n        margin-top: 10px;\n        color: rgb(111, 114, 114);\n        font-size: 14px;\n    }\n    .form-text-btn {\n        cursor: pointer;\n    }\n}\n</style>\n"]}]}